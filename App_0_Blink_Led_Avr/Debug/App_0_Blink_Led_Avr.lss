
App_0_Blink_Led_Avr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000009ea  00000a5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         0000093c  00000000  00000000  00000a60  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000bcb  00000000  00000000  0000139c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001f67  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f78  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  00001fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  000025ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  00002b4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00002b68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:


#include <avr/io.h>
#include <util/delay.h>

int main(){
  80:	0f 93       	push	r16
  82:	1f 93       	push	r17
  84:	cf 93       	push	r28
  86:	df 93       	push	r29
  88:	cd b7       	in	r28, 0x3d	; 61
  8a:	de b7       	in	r29, 0x3e	; 62
  8c:	c4 55       	subi	r28, 0x54	; 84
  8e:	d1 09       	sbc	r29, r1
  90:	0f b6       	in	r0, 0x3f	; 63
  92:	f8 94       	cli
  94:	de bf       	out	0x3e, r29	; 62
  96:	0f be       	out	0x3f, r0	; 63
  98:	cd bf       	out	0x3d, r28	; 61

	DDRD |= _BV(DDD2) | _BV(DDD3);
  9a:	8a e2       	ldi	r24, 0x2A	; 42
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	2a e2       	ldi	r18, 0x2A	; 42
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	f9 01       	movw	r30, r18
  a4:	20 81       	ld	r18, Z
  a6:	2c 60       	ori	r18, 0x0C	; 12
  a8:	fc 01       	movw	r30, r24
  aa:	20 83       	st	Z, r18
	DDRB |= _BV(DDB5);
  ac:	84 e2       	ldi	r24, 0x24	; 36
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	24 e2       	ldi	r18, 0x24	; 36
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	f9 01       	movw	r30, r18
  b6:	20 81       	ld	r18, Z
  b8:	20 62       	ori	r18, 0x20	; 32
  ba:	fc 01       	movw	r30, r24
  bc:	20 83       	st	Z, r18

	while(1){

		PORTD |= _BV(PD2);
  be:	8b e2       	ldi	r24, 0x2B	; 43
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	2b e2       	ldi	r18, 0x2B	; 43
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	f9 01       	movw	r30, r18
  c8:	20 81       	ld	r18, Z
  ca:	24 60       	ori	r18, 0x04	; 4
  cc:	fc 01       	movw	r30, r24
  ce:	20 83       	st	Z, r18
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	aa ef       	ldi	r26, 0xFA	; 250
  d6:	b3 e4       	ldi	r27, 0x43	; 67
  d8:	89 83       	std	Y+1, r24	; 0x01
  da:	9a 83       	std	Y+2, r25	; 0x02
  dc:	ab 83       	std	Y+3, r26	; 0x03
  de:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
  e0:	8e 01       	movw	r16, r28
  e2:	05 5b       	subi	r16, 0xB5	; 181
  e4:	1f 4f       	sbci	r17, 0xFF	; 255
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	4a e7       	ldi	r20, 0x7A	; 122
  ec:	55 e4       	ldi	r21, 0x45	; 69
  ee:	69 81       	ldd	r22, Y+1	; 0x01
  f0:	7a 81       	ldd	r23, Y+2	; 0x02
  f2:	8b 81       	ldd	r24, Y+3	; 0x03
  f4:	9c 81       	ldd	r25, Y+4	; 0x04
  f6:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
  fa:	dc 01       	movw	r26, r24
  fc:	cb 01       	movw	r24, r22
  fe:	f8 01       	movw	r30, r16
 100:	80 83       	st	Z, r24
 102:	91 83       	std	Z+1, r25	; 0x01
 104:	a2 83       	std	Z+2, r26	; 0x02
 106:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 108:	ce 01       	movw	r24, r28
 10a:	85 5b       	subi	r24, 0xB5	; 181
 10c:	9f 4f       	sbci	r25, 0xFF	; 255
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	40 e8       	ldi	r20, 0x80	; 128
 114:	5f e3       	ldi	r21, 0x3F	; 63
 116:	fc 01       	movw	r30, r24
 118:	60 81       	ld	r22, Z
 11a:	71 81       	ldd	r23, Z+1	; 0x01
 11c:	82 81       	ldd	r24, Z+2	; 0x02
 11e:	93 81       	ldd	r25, Z+3	; 0x03
 120:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__cmpsf2>
 124:	88 23       	and	r24, r24
 126:	4c f4       	brge	.+18     	; 0x13a <main+0xba>
		__ticks = 1;
 128:	ce 01       	movw	r24, r28
 12a:	81 5b       	subi	r24, 0xB1	; 177
 12c:	9f 4f       	sbci	r25, 0xFF	; 255
 12e:	21 e0       	ldi	r18, 0x01	; 1
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	fc 01       	movw	r30, r24
 134:	31 83       	std	Z+1, r19	; 0x01
 136:	20 83       	st	Z, r18
 138:	69 c0       	rjmp	.+210    	; 0x20c <main+0x18c>
	else if (__tmp > 65535)
 13a:	ce 01       	movw	r24, r28
 13c:	85 5b       	subi	r24, 0xB5	; 181
 13e:	9f 4f       	sbci	r25, 0xFF	; 255
 140:	20 e0       	ldi	r18, 0x00	; 0
 142:	3f ef       	ldi	r19, 0xFF	; 255
 144:	4f e7       	ldi	r20, 0x7F	; 127
 146:	57 e4       	ldi	r21, 0x47	; 71
 148:	fc 01       	movw	r30, r24
 14a:	60 81       	ld	r22, Z
 14c:	71 81       	ldd	r23, Z+1	; 0x01
 14e:	82 81       	ldd	r24, Z+2	; 0x02
 150:	93 81       	ldd	r25, Z+3	; 0x03
 152:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__gesf2>
 156:	18 16       	cp	r1, r24
 158:	0c f0       	brlt	.+2      	; 0x15c <main+0xdc>
 15a:	46 c0       	rjmp	.+140    	; 0x1e8 <main+0x168>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 15c:	20 e0       	ldi	r18, 0x00	; 0
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	40 e2       	ldi	r20, 0x20	; 32
 162:	51 e4       	ldi	r21, 0x41	; 65
 164:	69 81       	ldd	r22, Y+1	; 0x01
 166:	7a 81       	ldd	r23, Y+2	; 0x02
 168:	8b 81       	ldd	r24, Y+3	; 0x03
 16a:	9c 81       	ldd	r25, Y+4	; 0x04
 16c:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 170:	dc 01       	movw	r26, r24
 172:	cb 01       	movw	r24, r22
 174:	8e 01       	movw	r16, r28
 176:	01 5b       	subi	r16, 0xB1	; 177
 178:	1f 4f       	sbci	r17, 0xFF	; 255
 17a:	bc 01       	movw	r22, r24
 17c:	cd 01       	movw	r24, r26
 17e:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 182:	dc 01       	movw	r26, r24
 184:	cb 01       	movw	r24, r22
 186:	f8 01       	movw	r30, r16
 188:	91 83       	std	Z+1, r25	; 0x01
 18a:	80 83       	st	Z, r24
 18c:	24 c0       	rjmp	.+72     	; 0x1d6 <main+0x156>
 18e:	ce 01       	movw	r24, r28
 190:	8f 5a       	subi	r24, 0xAF	; 175
 192:	9f 4f       	sbci	r25, 0xFF	; 255
 194:	20 e9       	ldi	r18, 0x90	; 144
 196:	31 e0       	ldi	r19, 0x01	; 1
 198:	fc 01       	movw	r30, r24
 19a:	31 83       	std	Z+1, r19	; 0x01
 19c:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 19e:	ce 01       	movw	r24, r28
 1a0:	8f 5a       	subi	r24, 0xAF	; 175
 1a2:	9f 4f       	sbci	r25, 0xFF	; 255
 1a4:	fc 01       	movw	r30, r24
 1a6:	80 81       	ld	r24, Z
 1a8:	91 81       	ldd	r25, Z+1	; 0x01
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <main+0x12a>
 1ae:	9e 01       	movw	r18, r28
 1b0:	2f 5a       	subi	r18, 0xAF	; 175
 1b2:	3f 4f       	sbci	r19, 0xFF	; 255
 1b4:	f9 01       	movw	r30, r18
 1b6:	91 83       	std	Z+1, r25	; 0x01
 1b8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ba:	ce 01       	movw	r24, r28
 1bc:	81 5b       	subi	r24, 0xB1	; 177
 1be:	9f 4f       	sbci	r25, 0xFF	; 255
 1c0:	9e 01       	movw	r18, r28
 1c2:	21 5b       	subi	r18, 0xB1	; 177
 1c4:	3f 4f       	sbci	r19, 0xFF	; 255
 1c6:	f9 01       	movw	r30, r18
 1c8:	20 81       	ld	r18, Z
 1ca:	31 81       	ldd	r19, Z+1	; 0x01
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	31 09       	sbc	r19, r1
 1d0:	fc 01       	movw	r30, r24
 1d2:	31 83       	std	Z+1, r19	; 0x01
 1d4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1d6:	ce 01       	movw	r24, r28
 1d8:	81 5b       	subi	r24, 0xB1	; 177
 1da:	9f 4f       	sbci	r25, 0xFF	; 255
 1dc:	fc 01       	movw	r30, r24
 1de:	80 81       	ld	r24, Z
 1e0:	91 81       	ldd	r25, Z+1	; 0x01
 1e2:	89 2b       	or	r24, r25
 1e4:	a1 f6       	brne	.-88     	; 0x18e <main+0x10e>
 1e6:	2c c0       	rjmp	.+88     	; 0x240 <main+0x1c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1e8:	8e 01       	movw	r16, r28
 1ea:	01 5b       	subi	r16, 0xB1	; 177
 1ec:	1f 4f       	sbci	r17, 0xFF	; 255
 1ee:	ce 01       	movw	r24, r28
 1f0:	85 5b       	subi	r24, 0xB5	; 181
 1f2:	9f 4f       	sbci	r25, 0xFF	; 255
 1f4:	fc 01       	movw	r30, r24
 1f6:	60 81       	ld	r22, Z
 1f8:	71 81       	ldd	r23, Z+1	; 0x01
 1fa:	82 81       	ldd	r24, Z+2	; 0x02
 1fc:	93 81       	ldd	r25, Z+3	; 0x03
 1fe:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 202:	dc 01       	movw	r26, r24
 204:	cb 01       	movw	r24, r22
 206:	f8 01       	movw	r30, r16
 208:	91 83       	std	Z+1, r25	; 0x01
 20a:	80 83       	st	Z, r24
 20c:	ce 01       	movw	r24, r28
 20e:	8d 5a       	subi	r24, 0xAD	; 173
 210:	9f 4f       	sbci	r25, 0xFF	; 255
 212:	9e 01       	movw	r18, r28
 214:	21 5b       	subi	r18, 0xB1	; 177
 216:	3f 4f       	sbci	r19, 0xFF	; 255
 218:	f9 01       	movw	r30, r18
 21a:	20 81       	ld	r18, Z
 21c:	31 81       	ldd	r19, Z+1	; 0x01
 21e:	fc 01       	movw	r30, r24
 220:	31 83       	std	Z+1, r19	; 0x01
 222:	20 83       	st	Z, r18
 224:	ce 01       	movw	r24, r28
 226:	8d 5a       	subi	r24, 0xAD	; 173
 228:	9f 4f       	sbci	r25, 0xFF	; 255
 22a:	fc 01       	movw	r30, r24
 22c:	80 81       	ld	r24, Z
 22e:	91 81       	ldd	r25, Z+1	; 0x01
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <main+0x1b0>
 234:	9e 01       	movw	r18, r28
 236:	2d 5a       	subi	r18, 0xAD	; 173
 238:	3f 4f       	sbci	r19, 0xFF	; 255
 23a:	f9 01       	movw	r30, r18
 23c:	91 83       	std	Z+1, r25	; 0x01
 23e:	80 83       	st	Z, r24
		_delay_ms(500);
		PORTD &= ~_BV(PD2);
 240:	8b e2       	ldi	r24, 0x2B	; 43
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	2b e2       	ldi	r18, 0x2B	; 43
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	f9 01       	movw	r30, r18
 24a:	20 81       	ld	r18, Z
 24c:	2b 7f       	andi	r18, 0xFB	; 251
 24e:	fc 01       	movw	r30, r24
 250:	20 83       	st	Z, r18
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	aa ef       	ldi	r26, 0xFA	; 250
 258:	b3 e4       	ldi	r27, 0x43	; 67
 25a:	8d 83       	std	Y+5, r24	; 0x05
 25c:	9e 83       	std	Y+6, r25	; 0x06
 25e:	af 83       	std	Y+7, r26	; 0x07
 260:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 262:	8e 01       	movw	r16, r28
 264:	0f 5b       	subi	r16, 0xBF	; 191
 266:	1f 4f       	sbci	r17, 0xFF	; 255
 268:	20 e0       	ldi	r18, 0x00	; 0
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	4a e7       	ldi	r20, 0x7A	; 122
 26e:	55 e4       	ldi	r21, 0x45	; 69
 270:	6d 81       	ldd	r22, Y+5	; 0x05
 272:	7e 81       	ldd	r23, Y+6	; 0x06
 274:	8f 81       	ldd	r24, Y+7	; 0x07
 276:	98 85       	ldd	r25, Y+8	; 0x08
 278:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 27c:	dc 01       	movw	r26, r24
 27e:	cb 01       	movw	r24, r22
 280:	f8 01       	movw	r30, r16
 282:	80 83       	st	Z, r24
 284:	91 83       	std	Z+1, r25	; 0x01
 286:	a2 83       	std	Z+2, r26	; 0x02
 288:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 28a:	ce 01       	movw	r24, r28
 28c:	8f 5b       	subi	r24, 0xBF	; 191
 28e:	9f 4f       	sbci	r25, 0xFF	; 255
 290:	20 e0       	ldi	r18, 0x00	; 0
 292:	30 e0       	ldi	r19, 0x00	; 0
 294:	40 e8       	ldi	r20, 0x80	; 128
 296:	5f e3       	ldi	r21, 0x3F	; 63
 298:	fc 01       	movw	r30, r24
 29a:	60 81       	ld	r22, Z
 29c:	71 81       	ldd	r23, Z+1	; 0x01
 29e:	82 81       	ldd	r24, Z+2	; 0x02
 2a0:	93 81       	ldd	r25, Z+3	; 0x03
 2a2:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__cmpsf2>
 2a6:	88 23       	and	r24, r24
 2a8:	4c f4       	brge	.+18     	; 0x2bc <main+0x23c>
		__ticks = 1;
 2aa:	ce 01       	movw	r24, r28
 2ac:	8b 5b       	subi	r24, 0xBB	; 187
 2ae:	9f 4f       	sbci	r25, 0xFF	; 255
 2b0:	21 e0       	ldi	r18, 0x01	; 1
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	fc 01       	movw	r30, r24
 2b6:	31 83       	std	Z+1, r19	; 0x01
 2b8:	20 83       	st	Z, r18
 2ba:	69 c0       	rjmp	.+210    	; 0x38e <main+0x30e>
	else if (__tmp > 65535)
 2bc:	ce 01       	movw	r24, r28
 2be:	8f 5b       	subi	r24, 0xBF	; 191
 2c0:	9f 4f       	sbci	r25, 0xFF	; 255
 2c2:	20 e0       	ldi	r18, 0x00	; 0
 2c4:	3f ef       	ldi	r19, 0xFF	; 255
 2c6:	4f e7       	ldi	r20, 0x7F	; 127
 2c8:	57 e4       	ldi	r21, 0x47	; 71
 2ca:	fc 01       	movw	r30, r24
 2cc:	60 81       	ld	r22, Z
 2ce:	71 81       	ldd	r23, Z+1	; 0x01
 2d0:	82 81       	ldd	r24, Z+2	; 0x02
 2d2:	93 81       	ldd	r25, Z+3	; 0x03
 2d4:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__gesf2>
 2d8:	18 16       	cp	r1, r24
 2da:	0c f0       	brlt	.+2      	; 0x2de <main+0x25e>
 2dc:	46 c0       	rjmp	.+140    	; 0x36a <main+0x2ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2de:	20 e0       	ldi	r18, 0x00	; 0
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	40 e2       	ldi	r20, 0x20	; 32
 2e4:	51 e4       	ldi	r21, 0x41	; 65
 2e6:	6d 81       	ldd	r22, Y+5	; 0x05
 2e8:	7e 81       	ldd	r23, Y+6	; 0x06
 2ea:	8f 81       	ldd	r24, Y+7	; 0x07
 2ec:	98 85       	ldd	r25, Y+8	; 0x08
 2ee:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 2f2:	dc 01       	movw	r26, r24
 2f4:	cb 01       	movw	r24, r22
 2f6:	8e 01       	movw	r16, r28
 2f8:	0b 5b       	subi	r16, 0xBB	; 187
 2fa:	1f 4f       	sbci	r17, 0xFF	; 255
 2fc:	bc 01       	movw	r22, r24
 2fe:	cd 01       	movw	r24, r26
 300:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 304:	dc 01       	movw	r26, r24
 306:	cb 01       	movw	r24, r22
 308:	f8 01       	movw	r30, r16
 30a:	91 83       	std	Z+1, r25	; 0x01
 30c:	80 83       	st	Z, r24
 30e:	24 c0       	rjmp	.+72     	; 0x358 <main+0x2d8>
 310:	ce 01       	movw	r24, r28
 312:	89 5b       	subi	r24, 0xB9	; 185
 314:	9f 4f       	sbci	r25, 0xFF	; 255
 316:	20 e9       	ldi	r18, 0x90	; 144
 318:	31 e0       	ldi	r19, 0x01	; 1
 31a:	fc 01       	movw	r30, r24
 31c:	31 83       	std	Z+1, r19	; 0x01
 31e:	20 83       	st	Z, r18
 320:	ce 01       	movw	r24, r28
 322:	89 5b       	subi	r24, 0xB9	; 185
 324:	9f 4f       	sbci	r25, 0xFF	; 255
 326:	fc 01       	movw	r30, r24
 328:	80 81       	ld	r24, Z
 32a:	91 81       	ldd	r25, Z+1	; 0x01
 32c:	01 97       	sbiw	r24, 0x01	; 1
 32e:	f1 f7       	brne	.-4      	; 0x32c <main+0x2ac>
 330:	9e 01       	movw	r18, r28
 332:	29 5b       	subi	r18, 0xB9	; 185
 334:	3f 4f       	sbci	r19, 0xFF	; 255
 336:	f9 01       	movw	r30, r18
 338:	91 83       	std	Z+1, r25	; 0x01
 33a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 33c:	ce 01       	movw	r24, r28
 33e:	8b 5b       	subi	r24, 0xBB	; 187
 340:	9f 4f       	sbci	r25, 0xFF	; 255
 342:	9e 01       	movw	r18, r28
 344:	2b 5b       	subi	r18, 0xBB	; 187
 346:	3f 4f       	sbci	r19, 0xFF	; 255
 348:	f9 01       	movw	r30, r18
 34a:	20 81       	ld	r18, Z
 34c:	31 81       	ldd	r19, Z+1	; 0x01
 34e:	21 50       	subi	r18, 0x01	; 1
 350:	31 09       	sbc	r19, r1
 352:	fc 01       	movw	r30, r24
 354:	31 83       	std	Z+1, r19	; 0x01
 356:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 358:	ce 01       	movw	r24, r28
 35a:	8b 5b       	subi	r24, 0xBB	; 187
 35c:	9f 4f       	sbci	r25, 0xFF	; 255
 35e:	fc 01       	movw	r30, r24
 360:	80 81       	ld	r24, Z
 362:	91 81       	ldd	r25, Z+1	; 0x01
 364:	89 2b       	or	r24, r25
 366:	a1 f6       	brne	.-88     	; 0x310 <main+0x290>
 368:	2c c0       	rjmp	.+88     	; 0x3c2 <main+0x342>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 36a:	8e 01       	movw	r16, r28
 36c:	0b 5b       	subi	r16, 0xBB	; 187
 36e:	1f 4f       	sbci	r17, 0xFF	; 255
 370:	ce 01       	movw	r24, r28
 372:	8f 5b       	subi	r24, 0xBF	; 191
 374:	9f 4f       	sbci	r25, 0xFF	; 255
 376:	fc 01       	movw	r30, r24
 378:	60 81       	ld	r22, Z
 37a:	71 81       	ldd	r23, Z+1	; 0x01
 37c:	82 81       	ldd	r24, Z+2	; 0x02
 37e:	93 81       	ldd	r25, Z+3	; 0x03
 380:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 384:	dc 01       	movw	r26, r24
 386:	cb 01       	movw	r24, r22
 388:	f8 01       	movw	r30, r16
 38a:	91 83       	std	Z+1, r25	; 0x01
 38c:	80 83       	st	Z, r24
 38e:	ce 01       	movw	r24, r28
 390:	87 5b       	subi	r24, 0xB7	; 183
 392:	9f 4f       	sbci	r25, 0xFF	; 255
 394:	9e 01       	movw	r18, r28
 396:	2b 5b       	subi	r18, 0xBB	; 187
 398:	3f 4f       	sbci	r19, 0xFF	; 255
 39a:	f9 01       	movw	r30, r18
 39c:	20 81       	ld	r18, Z
 39e:	31 81       	ldd	r19, Z+1	; 0x01
 3a0:	fc 01       	movw	r30, r24
 3a2:	31 83       	std	Z+1, r19	; 0x01
 3a4:	20 83       	st	Z, r18
 3a6:	ce 01       	movw	r24, r28
 3a8:	87 5b       	subi	r24, 0xB7	; 183
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	fc 01       	movw	r30, r24
 3ae:	80 81       	ld	r24, Z
 3b0:	91 81       	ldd	r25, Z+1	; 0x01
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <main+0x332>
 3b6:	9e 01       	movw	r18, r28
 3b8:	27 5b       	subi	r18, 0xB7	; 183
 3ba:	3f 4f       	sbci	r19, 0xFF	; 255
 3bc:	f9 01       	movw	r30, r18
 3be:	91 83       	std	Z+1, r25	; 0x01
 3c0:	80 83       	st	Z, r24
		_delay_ms(500);

		PORTD |= _BV(PD3);
 3c2:	8b e2       	ldi	r24, 0x2B	; 43
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	2b e2       	ldi	r18, 0x2B	; 43
 3c8:	30 e0       	ldi	r19, 0x00	; 0
 3ca:	f9 01       	movw	r30, r18
 3cc:	20 81       	ld	r18, Z
 3ce:	28 60       	ori	r18, 0x08	; 8
 3d0:	fc 01       	movw	r30, r24
 3d2:	20 83       	st	Z, r18
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	aa ef       	ldi	r26, 0xFA	; 250
 3da:	b3 e4       	ldi	r27, 0x43	; 67
 3dc:	89 87       	std	Y+9, r24	; 0x09
 3de:	9a 87       	std	Y+10, r25	; 0x0a
 3e0:	ab 87       	std	Y+11, r26	; 0x0b
 3e2:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 3e4:	20 e0       	ldi	r18, 0x00	; 0
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	4a e7       	ldi	r20, 0x7A	; 122
 3ea:	55 e4       	ldi	r21, 0x45	; 69
 3ec:	69 85       	ldd	r22, Y+9	; 0x09
 3ee:	7a 85       	ldd	r23, Y+10	; 0x0a
 3f0:	8b 85       	ldd	r24, Y+11	; 0x0b
 3f2:	9c 85       	ldd	r25, Y+12	; 0x0c
 3f4:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 3f8:	dc 01       	movw	r26, r24
 3fa:	cb 01       	movw	r24, r22
 3fc:	8f ab       	std	Y+55, r24	; 0x37
 3fe:	98 af       	std	Y+56, r25	; 0x38
 400:	a9 af       	std	Y+57, r26	; 0x39
 402:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
 404:	20 e0       	ldi	r18, 0x00	; 0
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	40 e8       	ldi	r20, 0x80	; 128
 40a:	5f e3       	ldi	r21, 0x3F	; 63
 40c:	6f a9       	ldd	r22, Y+55	; 0x37
 40e:	78 ad       	ldd	r23, Y+56	; 0x38
 410:	89 ad       	ldd	r24, Y+57	; 0x39
 412:	9a ad       	ldd	r25, Y+58	; 0x3a
 414:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__cmpsf2>
 418:	88 23       	and	r24, r24
 41a:	2c f4       	brge	.+10     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		__ticks = 1;
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	9c af       	std	Y+60, r25	; 0x3c
 422:	8b af       	std	Y+59, r24	; 0x3b
 424:	3f c0       	rjmp	.+126    	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
	else if (__tmp > 65535)
 426:	20 e0       	ldi	r18, 0x00	; 0
 428:	3f ef       	ldi	r19, 0xFF	; 255
 42a:	4f e7       	ldi	r20, 0x7F	; 127
 42c:	57 e4       	ldi	r21, 0x47	; 71
 42e:	6f a9       	ldd	r22, Y+55	; 0x37
 430:	78 ad       	ldd	r23, Y+56	; 0x38
 432:	89 ad       	ldd	r24, Y+57	; 0x39
 434:	9a ad       	ldd	r25, Y+58	; 0x3a
 436:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__gesf2>
 43a:	18 16       	cp	r1, r24
 43c:	4c f5       	brge	.+82     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 43e:	20 e0       	ldi	r18, 0x00	; 0
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	40 e2       	ldi	r20, 0x20	; 32
 444:	51 e4       	ldi	r21, 0x41	; 65
 446:	69 85       	ldd	r22, Y+9	; 0x09
 448:	7a 85       	ldd	r23, Y+10	; 0x0a
 44a:	8b 85       	ldd	r24, Y+11	; 0x0b
 44c:	9c 85       	ldd	r25, Y+12	; 0x0c
 44e:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 452:	dc 01       	movw	r26, r24
 454:	cb 01       	movw	r24, r22
 456:	bc 01       	movw	r22, r24
 458:	cd 01       	movw	r24, r26
 45a:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 45e:	dc 01       	movw	r26, r24
 460:	cb 01       	movw	r24, r22
 462:	9c af       	std	Y+60, r25	; 0x3c
 464:	8b af       	std	Y+59, r24	; 0x3b
 466:	0f c0       	rjmp	.+30     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 468:	80 e9       	ldi	r24, 0x90	; 144
 46a:	91 e0       	ldi	r25, 0x01	; 1
 46c:	9e af       	std	Y+62, r25	; 0x3e
 46e:	8d af       	std	Y+61, r24	; 0x3d
 470:	8d ad       	ldd	r24, Y+61	; 0x3d
 472:	9e ad       	ldd	r25, Y+62	; 0x3e
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 478:	9e af       	std	Y+62, r25	; 0x3e
 47a:	8d af       	std	Y+61, r24	; 0x3d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 47c:	8b ad       	ldd	r24, Y+59	; 0x3b
 47e:	9c ad       	ldd	r25, Y+60	; 0x3c
 480:	01 97       	sbiw	r24, 0x01	; 1
 482:	9c af       	std	Y+60, r25	; 0x3c
 484:	8b af       	std	Y+59, r24	; 0x3b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 486:	8b ad       	ldd	r24, Y+59	; 0x3b
 488:	9c ad       	ldd	r25, Y+60	; 0x3c
 48a:	89 2b       	or	r24, r25
 48c:	69 f7       	brne	.-38     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 48e:	1e c0       	rjmp	.+60     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 490:	6f a9       	ldd	r22, Y+55	; 0x37
 492:	78 ad       	ldd	r23, Y+56	; 0x38
 494:	89 ad       	ldd	r24, Y+57	; 0x39
 496:	9a ad       	ldd	r25, Y+58	; 0x3a
 498:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 49c:	dc 01       	movw	r26, r24
 49e:	cb 01       	movw	r24, r22
 4a0:	9c af       	std	Y+60, r25	; 0x3c
 4a2:	8b af       	std	Y+59, r24	; 0x3b
 4a4:	2b ad       	ldd	r18, Y+59	; 0x3b
 4a6:	3c ad       	ldd	r19, Y+60	; 0x3c
 4a8:	ce 01       	movw	r24, r28
 4aa:	cf 96       	adiw	r24, 0x3f	; 63
 4ac:	fc 01       	movw	r30, r24
 4ae:	31 83       	std	Z+1, r19	; 0x01
 4b0:	20 83       	st	Z, r18
 4b2:	ce 01       	movw	r24, r28
 4b4:	cf 96       	adiw	r24, 0x3f	; 63
 4b6:	fc 01       	movw	r30, r24
 4b8:	80 81       	ld	r24, Z
 4ba:	91 81       	ldd	r25, Z+1	; 0x01
 4bc:	01 97       	sbiw	r24, 0x01	; 1
 4be:	f1 f7       	brne	.-4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4c0:	9e 01       	movw	r18, r28
 4c2:	21 5c       	subi	r18, 0xC1	; 193
 4c4:	3f 4f       	sbci	r19, 0xFF	; 255
 4c6:	f9 01       	movw	r30, r18
 4c8:	91 83       	std	Z+1, r25	; 0x01
 4ca:	80 83       	st	Z, r24
		_delay_ms(500);
		PORTD &= ~_BV(PD3);
 4cc:	8b e2       	ldi	r24, 0x2B	; 43
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	2b e2       	ldi	r18, 0x2B	; 43
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	f9 01       	movw	r30, r18
 4d6:	20 81       	ld	r18, Z
 4d8:	27 7f       	andi	r18, 0xF7	; 247
 4da:	fc 01       	movw	r30, r24
 4dc:	20 83       	st	Z, r18
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	aa ef       	ldi	r26, 0xFA	; 250
 4e4:	b3 e4       	ldi	r27, 0x43	; 67
 4e6:	8d 87       	std	Y+13, r24	; 0x0d
 4e8:	9e 87       	std	Y+14, r25	; 0x0e
 4ea:	af 87       	std	Y+15, r26	; 0x0f
 4ec:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 4ee:	20 e0       	ldi	r18, 0x00	; 0
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	4a e7       	ldi	r20, 0x7A	; 122
 4f4:	55 e4       	ldi	r21, 0x45	; 69
 4f6:	6d 85       	ldd	r22, Y+13	; 0x0d
 4f8:	7e 85       	ldd	r23, Y+14	; 0x0e
 4fa:	8f 85       	ldd	r24, Y+15	; 0x0f
 4fc:	98 89       	ldd	r25, Y+16	; 0x10
 4fe:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 502:	dc 01       	movw	r26, r24
 504:	cb 01       	movw	r24, r22
 506:	8d a7       	std	Y+45, r24	; 0x2d
 508:	9e a7       	std	Y+46, r25	; 0x2e
 50a:	af a7       	std	Y+47, r26	; 0x2f
 50c:	b8 ab       	std	Y+48, r27	; 0x30
	if (__tmp < 1.0)
 50e:	20 e0       	ldi	r18, 0x00	; 0
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	40 e8       	ldi	r20, 0x80	; 128
 514:	5f e3       	ldi	r21, 0x3F	; 63
 516:	6d a5       	ldd	r22, Y+45	; 0x2d
 518:	7e a5       	ldd	r23, Y+46	; 0x2e
 51a:	8f a5       	ldd	r24, Y+47	; 0x2f
 51c:	98 a9       	ldd	r25, Y+48	; 0x30
 51e:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__cmpsf2>
 522:	88 23       	and	r24, r24
 524:	2c f4       	brge	.+10     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
		__ticks = 1;
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	9a ab       	std	Y+50, r25	; 0x32
 52c:	89 ab       	std	Y+49, r24	; 0x31
 52e:	3f c0       	rjmp	.+126    	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
	else if (__tmp > 65535)
 530:	20 e0       	ldi	r18, 0x00	; 0
 532:	3f ef       	ldi	r19, 0xFF	; 255
 534:	4f e7       	ldi	r20, 0x7F	; 127
 536:	57 e4       	ldi	r21, 0x47	; 71
 538:	6d a5       	ldd	r22, Y+45	; 0x2d
 53a:	7e a5       	ldd	r23, Y+46	; 0x2e
 53c:	8f a5       	ldd	r24, Y+47	; 0x2f
 53e:	98 a9       	ldd	r25, Y+48	; 0x30
 540:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__gesf2>
 544:	18 16       	cp	r1, r24
 546:	4c f5       	brge	.+82     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 548:	20 e0       	ldi	r18, 0x00	; 0
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	40 e2       	ldi	r20, 0x20	; 32
 54e:	51 e4       	ldi	r21, 0x41	; 65
 550:	6d 85       	ldd	r22, Y+13	; 0x0d
 552:	7e 85       	ldd	r23, Y+14	; 0x0e
 554:	8f 85       	ldd	r24, Y+15	; 0x0f
 556:	98 89       	ldd	r25, Y+16	; 0x10
 558:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 55c:	dc 01       	movw	r26, r24
 55e:	cb 01       	movw	r24, r22
 560:	bc 01       	movw	r22, r24
 562:	cd 01       	movw	r24, r26
 564:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 568:	dc 01       	movw	r26, r24
 56a:	cb 01       	movw	r24, r22
 56c:	9a ab       	std	Y+50, r25	; 0x32
 56e:	89 ab       	std	Y+49, r24	; 0x31
 570:	0f c0       	rjmp	.+30     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 572:	80 e9       	ldi	r24, 0x90	; 144
 574:	91 e0       	ldi	r25, 0x01	; 1
 576:	9c ab       	std	Y+52, r25	; 0x34
 578:	8b ab       	std	Y+51, r24	; 0x33
 57a:	8b a9       	ldd	r24, Y+51	; 0x33
 57c:	9c a9       	ldd	r25, Y+52	; 0x34
 57e:	01 97       	sbiw	r24, 0x01	; 1
 580:	f1 f7       	brne	.-4      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 582:	9c ab       	std	Y+52, r25	; 0x34
 584:	8b ab       	std	Y+51, r24	; 0x33
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 586:	89 a9       	ldd	r24, Y+49	; 0x31
 588:	9a a9       	ldd	r25, Y+50	; 0x32
 58a:	01 97       	sbiw	r24, 0x01	; 1
 58c:	9a ab       	std	Y+50, r25	; 0x32
 58e:	89 ab       	std	Y+49, r24	; 0x31
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 590:	89 a9       	ldd	r24, Y+49	; 0x31
 592:	9a a9       	ldd	r25, Y+50	; 0x32
 594:	89 2b       	or	r24, r25
 596:	69 f7       	brne	.-38     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 598:	14 c0       	rjmp	.+40     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 59a:	6d a5       	ldd	r22, Y+45	; 0x2d
 59c:	7e a5       	ldd	r23, Y+46	; 0x2e
 59e:	8f a5       	ldd	r24, Y+47	; 0x2f
 5a0:	98 a9       	ldd	r25, Y+48	; 0x30
 5a2:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 5a6:	dc 01       	movw	r26, r24
 5a8:	cb 01       	movw	r24, r22
 5aa:	9a ab       	std	Y+50, r25	; 0x32
 5ac:	89 ab       	std	Y+49, r24	; 0x31
 5ae:	89 a9       	ldd	r24, Y+49	; 0x31
 5b0:	9a a9       	ldd	r25, Y+50	; 0x32
 5b2:	9e ab       	std	Y+54, r25	; 0x36
 5b4:	8d ab       	std	Y+53, r24	; 0x35
 5b6:	8d a9       	ldd	r24, Y+53	; 0x35
 5b8:	9e a9       	ldd	r25, Y+54	; 0x36
 5ba:	01 97       	sbiw	r24, 0x01	; 1
 5bc:	f1 f7       	brne	.-4      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5be:	9e ab       	std	Y+54, r25	; 0x36
 5c0:	8d ab       	std	Y+53, r24	; 0x35
		_delay_ms(500);

		PORTB |= _BV(PB5);
 5c2:	85 e2       	ldi	r24, 0x25	; 37
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	25 e2       	ldi	r18, 0x25	; 37
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	f9 01       	movw	r30, r18
 5cc:	20 81       	ld	r18, Z
 5ce:	20 62       	ori	r18, 0x20	; 32
 5d0:	fc 01       	movw	r30, r24
 5d2:	20 83       	st	Z, r18
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	aa ef       	ldi	r26, 0xFA	; 250
 5da:	b3 e4       	ldi	r27, 0x43	; 67
 5dc:	89 8b       	std	Y+17, r24	; 0x11
 5de:	9a 8b       	std	Y+18, r25	; 0x12
 5e0:	ab 8b       	std	Y+19, r26	; 0x13
 5e2:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 5e4:	20 e0       	ldi	r18, 0x00	; 0
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	4a e7       	ldi	r20, 0x7A	; 122
 5ea:	55 e4       	ldi	r21, 0x45	; 69
 5ec:	69 89       	ldd	r22, Y+17	; 0x11
 5ee:	7a 89       	ldd	r23, Y+18	; 0x12
 5f0:	8b 89       	ldd	r24, Y+19	; 0x13
 5f2:	9c 89       	ldd	r25, Y+20	; 0x14
 5f4:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 5f8:	dc 01       	movw	r26, r24
 5fa:	cb 01       	movw	r24, r22
 5fc:	8b a3       	std	Y+35, r24	; 0x23
 5fe:	9c a3       	std	Y+36, r25	; 0x24
 600:	ad a3       	std	Y+37, r26	; 0x25
 602:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
 604:	20 e0       	ldi	r18, 0x00	; 0
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	40 e8       	ldi	r20, 0x80	; 128
 60a:	5f e3       	ldi	r21, 0x3F	; 63
 60c:	6b a1       	ldd	r22, Y+35	; 0x23
 60e:	7c a1       	ldd	r23, Y+36	; 0x24
 610:	8d a1       	ldd	r24, Y+37	; 0x25
 612:	9e a1       	ldd	r25, Y+38	; 0x26
 614:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__cmpsf2>
 618:	88 23       	and	r24, r24
 61a:	2c f4       	brge	.+10     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
		__ticks = 1;
 61c:	81 e0       	ldi	r24, 0x01	; 1
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	98 a7       	std	Y+40, r25	; 0x28
 622:	8f a3       	std	Y+39, r24	; 0x27
 624:	3f c0       	rjmp	.+126    	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
	else if (__tmp > 65535)
 626:	20 e0       	ldi	r18, 0x00	; 0
 628:	3f ef       	ldi	r19, 0xFF	; 255
 62a:	4f e7       	ldi	r20, 0x7F	; 127
 62c:	57 e4       	ldi	r21, 0x47	; 71
 62e:	6b a1       	ldd	r22, Y+35	; 0x23
 630:	7c a1       	ldd	r23, Y+36	; 0x24
 632:	8d a1       	ldd	r24, Y+37	; 0x25
 634:	9e a1       	ldd	r25, Y+38	; 0x26
 636:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__gesf2>
 63a:	18 16       	cp	r1, r24
 63c:	4c f5       	brge	.+82     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 63e:	20 e0       	ldi	r18, 0x00	; 0
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	40 e2       	ldi	r20, 0x20	; 32
 644:	51 e4       	ldi	r21, 0x41	; 65
 646:	69 89       	ldd	r22, Y+17	; 0x11
 648:	7a 89       	ldd	r23, Y+18	; 0x12
 64a:	8b 89       	ldd	r24, Y+19	; 0x13
 64c:	9c 89       	ldd	r25, Y+20	; 0x14
 64e:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 652:	dc 01       	movw	r26, r24
 654:	cb 01       	movw	r24, r22
 656:	bc 01       	movw	r22, r24
 658:	cd 01       	movw	r24, r26
 65a:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 65e:	dc 01       	movw	r26, r24
 660:	cb 01       	movw	r24, r22
 662:	98 a7       	std	Y+40, r25	; 0x28
 664:	8f a3       	std	Y+39, r24	; 0x27
 666:	0f c0       	rjmp	.+30     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 668:	80 e9       	ldi	r24, 0x90	; 144
 66a:	91 e0       	ldi	r25, 0x01	; 1
 66c:	9a a7       	std	Y+42, r25	; 0x2a
 66e:	89 a7       	std	Y+41, r24	; 0x29
 670:	89 a5       	ldd	r24, Y+41	; 0x29
 672:	9a a5       	ldd	r25, Y+42	; 0x2a
 674:	01 97       	sbiw	r24, 0x01	; 1
 676:	f1 f7       	brne	.-4      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 678:	9a a7       	std	Y+42, r25	; 0x2a
 67a:	89 a7       	std	Y+41, r24	; 0x29
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 67c:	8f a1       	ldd	r24, Y+39	; 0x27
 67e:	98 a5       	ldd	r25, Y+40	; 0x28
 680:	01 97       	sbiw	r24, 0x01	; 1
 682:	98 a7       	std	Y+40, r25	; 0x28
 684:	8f a3       	std	Y+39, r24	; 0x27
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 686:	8f a1       	ldd	r24, Y+39	; 0x27
 688:	98 a5       	ldd	r25, Y+40	; 0x28
 68a:	89 2b       	or	r24, r25
 68c:	69 f7       	brne	.-38     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 68e:	14 c0       	rjmp	.+40     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 690:	6b a1       	ldd	r22, Y+35	; 0x23
 692:	7c a1       	ldd	r23, Y+36	; 0x24
 694:	8d a1       	ldd	r24, Y+37	; 0x25
 696:	9e a1       	ldd	r25, Y+38	; 0x26
 698:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 69c:	dc 01       	movw	r26, r24
 69e:	cb 01       	movw	r24, r22
 6a0:	98 a7       	std	Y+40, r25	; 0x28
 6a2:	8f a3       	std	Y+39, r24	; 0x27
 6a4:	8f a1       	ldd	r24, Y+39	; 0x27
 6a6:	98 a5       	ldd	r25, Y+40	; 0x28
 6a8:	9c a7       	std	Y+44, r25	; 0x2c
 6aa:	8b a7       	std	Y+43, r24	; 0x2b
 6ac:	8b a5       	ldd	r24, Y+43	; 0x2b
 6ae:	9c a5       	ldd	r25, Y+44	; 0x2c
 6b0:	01 97       	sbiw	r24, 0x01	; 1
 6b2:	f1 f7       	brne	.-4      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 6b4:	9c a7       	std	Y+44, r25	; 0x2c
 6b6:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(500);
		PORTB &= ~_BV(PB5);
 6b8:	85 e2       	ldi	r24, 0x25	; 37
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	25 e2       	ldi	r18, 0x25	; 37
 6be:	30 e0       	ldi	r19, 0x00	; 0
 6c0:	f9 01       	movw	r30, r18
 6c2:	20 81       	ld	r18, Z
 6c4:	2f 7d       	andi	r18, 0xDF	; 223
 6c6:	fc 01       	movw	r30, r24
 6c8:	20 83       	st	Z, r18
 6ca:	80 e0       	ldi	r24, 0x00	; 0
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	aa ef       	ldi	r26, 0xFA	; 250
 6d0:	b3 e4       	ldi	r27, 0x43	; 67
 6d2:	8d 8b       	std	Y+21, r24	; 0x15
 6d4:	9e 8b       	std	Y+22, r25	; 0x16
 6d6:	af 8b       	std	Y+23, r26	; 0x17
 6d8:	b8 8f       	std	Y+24, r27	; 0x18

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 6da:	20 e0       	ldi	r18, 0x00	; 0
 6dc:	30 e0       	ldi	r19, 0x00	; 0
 6de:	4a e7       	ldi	r20, 0x7A	; 122
 6e0:	55 e4       	ldi	r21, 0x45	; 69
 6e2:	6d 89       	ldd	r22, Y+21	; 0x15
 6e4:	7e 89       	ldd	r23, Y+22	; 0x16
 6e6:	8f 89       	ldd	r24, Y+23	; 0x17
 6e8:	98 8d       	ldd	r25, Y+24	; 0x18
 6ea:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 6ee:	dc 01       	movw	r26, r24
 6f0:	cb 01       	movw	r24, r22
 6f2:	89 8f       	std	Y+25, r24	; 0x19
 6f4:	9a 8f       	std	Y+26, r25	; 0x1a
 6f6:	ab 8f       	std	Y+27, r26	; 0x1b
 6f8:	bc 8f       	std	Y+28, r27	; 0x1c
	if (__tmp < 1.0)
 6fa:	20 e0       	ldi	r18, 0x00	; 0
 6fc:	30 e0       	ldi	r19, 0x00	; 0
 6fe:	40 e8       	ldi	r20, 0x80	; 128
 700:	5f e3       	ldi	r21, 0x3F	; 63
 702:	69 8d       	ldd	r22, Y+25	; 0x19
 704:	7a 8d       	ldd	r23, Y+26	; 0x1a
 706:	8b 8d       	ldd	r24, Y+27	; 0x1b
 708:	9c 8d       	ldd	r25, Y+28	; 0x1c
 70a:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__cmpsf2>
 70e:	88 23       	and	r24, r24
 710:	2c f4       	brge	.+10     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
		__ticks = 1;
 712:	81 e0       	ldi	r24, 0x01	; 1
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	9e 8f       	std	Y+30, r25	; 0x1e
 718:	8d 8f       	std	Y+29, r24	; 0x1d
 71a:	3f c0       	rjmp	.+126    	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
	else if (__tmp > 65535)
 71c:	20 e0       	ldi	r18, 0x00	; 0
 71e:	3f ef       	ldi	r19, 0xFF	; 255
 720:	4f e7       	ldi	r20, 0x7F	; 127
 722:	57 e4       	ldi	r21, 0x47	; 71
 724:	69 8d       	ldd	r22, Y+25	; 0x19
 726:	7a 8d       	ldd	r23, Y+26	; 0x1a
 728:	8b 8d       	ldd	r24, Y+27	; 0x1b
 72a:	9c 8d       	ldd	r25, Y+28	; 0x1c
 72c:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__gesf2>
 730:	18 16       	cp	r1, r24
 732:	4c f5       	brge	.+82     	; 0x786 <__LOCK_REGION_LENGTH__+0x386>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 734:	20 e0       	ldi	r18, 0x00	; 0
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	40 e2       	ldi	r20, 0x20	; 32
 73a:	51 e4       	ldi	r21, 0x41	; 65
 73c:	6d 89       	ldd	r22, Y+21	; 0x15
 73e:	7e 89       	ldd	r23, Y+22	; 0x16
 740:	8f 89       	ldd	r24, Y+23	; 0x17
 742:	98 8d       	ldd	r25, Y+24	; 0x18
 744:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__mulsf3>
 748:	dc 01       	movw	r26, r24
 74a:	cb 01       	movw	r24, r22
 74c:	bc 01       	movw	r22, r24
 74e:	cd 01       	movw	r24, r26
 750:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 754:	dc 01       	movw	r26, r24
 756:	cb 01       	movw	r24, r22
 758:	9e 8f       	std	Y+30, r25	; 0x1e
 75a:	8d 8f       	std	Y+29, r24	; 0x1d
 75c:	0f c0       	rjmp	.+30     	; 0x77c <__LOCK_REGION_LENGTH__+0x37c>
 75e:	80 e9       	ldi	r24, 0x90	; 144
 760:	91 e0       	ldi	r25, 0x01	; 1
 762:	98 a3       	std	Y+32, r25	; 0x20
 764:	8f 8f       	std	Y+31, r24	; 0x1f
 766:	8f 8d       	ldd	r24, Y+31	; 0x1f
 768:	98 a1       	ldd	r25, Y+32	; 0x20
 76a:	01 97       	sbiw	r24, 0x01	; 1
 76c:	f1 f7       	brne	.-4      	; 0x76a <__LOCK_REGION_LENGTH__+0x36a>
 76e:	98 a3       	std	Y+32, r25	; 0x20
 770:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 772:	8d 8d       	ldd	r24, Y+29	; 0x1d
 774:	9e 8d       	ldd	r25, Y+30	; 0x1e
 776:	01 97       	sbiw	r24, 0x01	; 1
 778:	9e 8f       	std	Y+30, r25	; 0x1e
 77a:	8d 8f       	std	Y+29, r24	; 0x1d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 77c:	8d 8d       	ldd	r24, Y+29	; 0x1d
 77e:	9e 8d       	ldd	r25, Y+30	; 0x1e
 780:	89 2b       	or	r24, r25
 782:	69 f7       	brne	.-38     	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 784:	14 c0       	rjmp	.+40     	; 0x7ae <__LOCK_REGION_LENGTH__+0x3ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 786:	69 8d       	ldd	r22, Y+25	; 0x19
 788:	7a 8d       	ldd	r23, Y+26	; 0x1a
 78a:	8b 8d       	ldd	r24, Y+27	; 0x1b
 78c:	9c 8d       	ldd	r25, Y+28	; 0x1c
 78e:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fixunssfsi>
 792:	dc 01       	movw	r26, r24
 794:	cb 01       	movw	r24, r22
 796:	9e 8f       	std	Y+30, r25	; 0x1e
 798:	8d 8f       	std	Y+29, r24	; 0x1d
 79a:	8d 8d       	ldd	r24, Y+29	; 0x1d
 79c:	9e 8d       	ldd	r25, Y+30	; 0x1e
 79e:	9a a3       	std	Y+34, r25	; 0x22
 7a0:	89 a3       	std	Y+33, r24	; 0x21
 7a2:	89 a1       	ldd	r24, Y+33	; 0x21
 7a4:	9a a1       	ldd	r25, Y+34	; 0x22
 7a6:	01 97       	sbiw	r24, 0x01	; 1
 7a8:	f1 f7       	brne	.-4      	; 0x7a6 <__LOCK_REGION_LENGTH__+0x3a6>
 7aa:	9a a3       	std	Y+34, r25	; 0x22
 7ac:	89 a3       	std	Y+33, r24	; 0x21
		_delay_ms(500);
	}
 7ae:	87 cc       	rjmp	.-1778   	; 0xbe <main+0x3e>

000007b0 <__cmpsf2>:
 7b0:	0e 94 0c 04 	call	0x818	; 0x818 <__fp_cmp>
 7b4:	08 f4       	brcc	.+2      	; 0x7b8 <__cmpsf2+0x8>
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	08 95       	ret

000007ba <__fixunssfsi>:
 7ba:	0e 94 38 04 	call	0x870	; 0x870 <__fp_splitA>
 7be:	88 f0       	brcs	.+34     	; 0x7e2 <__fixunssfsi+0x28>
 7c0:	9f 57       	subi	r25, 0x7F	; 127
 7c2:	98 f0       	brcs	.+38     	; 0x7ea <__fixunssfsi+0x30>
 7c4:	b9 2f       	mov	r27, r25
 7c6:	99 27       	eor	r25, r25
 7c8:	b7 51       	subi	r27, 0x17	; 23
 7ca:	b0 f0       	brcs	.+44     	; 0x7f8 <__fixunssfsi+0x3e>
 7cc:	e1 f0       	breq	.+56     	; 0x806 <__fixunssfsi+0x4c>
 7ce:	66 0f       	add	r22, r22
 7d0:	77 1f       	adc	r23, r23
 7d2:	88 1f       	adc	r24, r24
 7d4:	99 1f       	adc	r25, r25
 7d6:	1a f0       	brmi	.+6      	; 0x7de <__fixunssfsi+0x24>
 7d8:	ba 95       	dec	r27
 7da:	c9 f7       	brne	.-14     	; 0x7ce <__fixunssfsi+0x14>
 7dc:	14 c0       	rjmp	.+40     	; 0x806 <__fixunssfsi+0x4c>
 7de:	b1 30       	cpi	r27, 0x01	; 1
 7e0:	91 f0       	breq	.+36     	; 0x806 <__fixunssfsi+0x4c>
 7e2:	0e 94 52 04 	call	0x8a4	; 0x8a4 <__fp_zero>
 7e6:	b1 e0       	ldi	r27, 0x01	; 1
 7e8:	08 95       	ret
 7ea:	0c 94 52 04 	jmp	0x8a4	; 0x8a4 <__fp_zero>
 7ee:	67 2f       	mov	r22, r23
 7f0:	78 2f       	mov	r23, r24
 7f2:	88 27       	eor	r24, r24
 7f4:	b8 5f       	subi	r27, 0xF8	; 248
 7f6:	39 f0       	breq	.+14     	; 0x806 <__fixunssfsi+0x4c>
 7f8:	b9 3f       	cpi	r27, 0xF9	; 249
 7fa:	cc f3       	brlt	.-14     	; 0x7ee <__fixunssfsi+0x34>
 7fc:	86 95       	lsr	r24
 7fe:	77 95       	ror	r23
 800:	67 95       	ror	r22
 802:	b3 95       	inc	r27
 804:	d9 f7       	brne	.-10     	; 0x7fc <__fixunssfsi+0x42>
 806:	3e f4       	brtc	.+14     	; 0x816 <__fixunssfsi+0x5c>
 808:	90 95       	com	r25
 80a:	80 95       	com	r24
 80c:	70 95       	com	r23
 80e:	61 95       	neg	r22
 810:	7f 4f       	sbci	r23, 0xFF	; 255
 812:	8f 4f       	sbci	r24, 0xFF	; 255
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	08 95       	ret

00000818 <__fp_cmp>:
 818:	99 0f       	add	r25, r25
 81a:	00 08       	sbc	r0, r0
 81c:	55 0f       	add	r21, r21
 81e:	aa 0b       	sbc	r26, r26
 820:	e0 e8       	ldi	r30, 0x80	; 128
 822:	fe ef       	ldi	r31, 0xFE	; 254
 824:	16 16       	cp	r1, r22
 826:	17 06       	cpc	r1, r23
 828:	e8 07       	cpc	r30, r24
 82a:	f9 07       	cpc	r31, r25
 82c:	c0 f0       	brcs	.+48     	; 0x85e <__fp_cmp+0x46>
 82e:	12 16       	cp	r1, r18
 830:	13 06       	cpc	r1, r19
 832:	e4 07       	cpc	r30, r20
 834:	f5 07       	cpc	r31, r21
 836:	98 f0       	brcs	.+38     	; 0x85e <__fp_cmp+0x46>
 838:	62 1b       	sub	r22, r18
 83a:	73 0b       	sbc	r23, r19
 83c:	84 0b       	sbc	r24, r20
 83e:	95 0b       	sbc	r25, r21
 840:	39 f4       	brne	.+14     	; 0x850 <__fp_cmp+0x38>
 842:	0a 26       	eor	r0, r26
 844:	61 f0       	breq	.+24     	; 0x85e <__fp_cmp+0x46>
 846:	23 2b       	or	r18, r19
 848:	24 2b       	or	r18, r20
 84a:	25 2b       	or	r18, r21
 84c:	21 f4       	brne	.+8      	; 0x856 <__fp_cmp+0x3e>
 84e:	08 95       	ret
 850:	0a 26       	eor	r0, r26
 852:	09 f4       	brne	.+2      	; 0x856 <__fp_cmp+0x3e>
 854:	a1 40       	sbci	r26, 0x01	; 1
 856:	a6 95       	lsr	r26
 858:	8f ef       	ldi	r24, 0xFF	; 255
 85a:	81 1d       	adc	r24, r1
 85c:	81 1d       	adc	r24, r1
 85e:	08 95       	ret

00000860 <__fp_split3>:
 860:	57 fd       	sbrc	r21, 7
 862:	90 58       	subi	r25, 0x80	; 128
 864:	44 0f       	add	r20, r20
 866:	55 1f       	adc	r21, r21
 868:	59 f0       	breq	.+22     	; 0x880 <__fp_splitA+0x10>
 86a:	5f 3f       	cpi	r21, 0xFF	; 255
 86c:	71 f0       	breq	.+28     	; 0x88a <__fp_splitA+0x1a>
 86e:	47 95       	ror	r20

00000870 <__fp_splitA>:
 870:	88 0f       	add	r24, r24
 872:	97 fb       	bst	r25, 7
 874:	99 1f       	adc	r25, r25
 876:	61 f0       	breq	.+24     	; 0x890 <__fp_splitA+0x20>
 878:	9f 3f       	cpi	r25, 0xFF	; 255
 87a:	79 f0       	breq	.+30     	; 0x89a <__fp_splitA+0x2a>
 87c:	87 95       	ror	r24
 87e:	08 95       	ret
 880:	12 16       	cp	r1, r18
 882:	13 06       	cpc	r1, r19
 884:	14 06       	cpc	r1, r20
 886:	55 1f       	adc	r21, r21
 888:	f2 cf       	rjmp	.-28     	; 0x86e <__fp_split3+0xe>
 88a:	46 95       	lsr	r20
 88c:	f1 df       	rcall	.-30     	; 0x870 <__fp_splitA>
 88e:	08 c0       	rjmp	.+16     	; 0x8a0 <__fp_splitA+0x30>
 890:	16 16       	cp	r1, r22
 892:	17 06       	cpc	r1, r23
 894:	18 06       	cpc	r1, r24
 896:	99 1f       	adc	r25, r25
 898:	f1 cf       	rjmp	.-30     	; 0x87c <__fp_splitA+0xc>
 89a:	86 95       	lsr	r24
 89c:	71 05       	cpc	r23, r1
 89e:	61 05       	cpc	r22, r1
 8a0:	08 94       	sec
 8a2:	08 95       	ret

000008a4 <__fp_zero>:
 8a4:	e8 94       	clt

000008a6 <__fp_szero>:
 8a6:	bb 27       	eor	r27, r27
 8a8:	66 27       	eor	r22, r22
 8aa:	77 27       	eor	r23, r23
 8ac:	cb 01       	movw	r24, r22
 8ae:	97 f9       	bld	r25, 7
 8b0:	08 95       	ret

000008b2 <__gesf2>:
 8b2:	0e 94 0c 04 	call	0x818	; 0x818 <__fp_cmp>
 8b6:	08 f4       	brcc	.+2      	; 0x8ba <__gesf2+0x8>
 8b8:	8f ef       	ldi	r24, 0xFF	; 255
 8ba:	08 95       	ret

000008bc <__mulsf3>:
 8bc:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__mulsf3x>
 8c0:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__fp_round>
 8c4:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <__fp_pscA>
 8c8:	38 f0       	brcs	.+14     	; 0x8d8 <__mulsf3+0x1c>
 8ca:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fp_pscB>
 8ce:	20 f0       	brcs	.+8      	; 0x8d8 <__mulsf3+0x1c>
 8d0:	95 23       	and	r25, r21
 8d2:	11 f0       	breq	.+4      	; 0x8d8 <__mulsf3+0x1c>
 8d4:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>
 8d8:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__fp_nan>
 8dc:	11 24       	eor	r1, r1
 8de:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__fp_szero>

000008e2 <__mulsf3x>:
 8e2:	0e 94 30 04 	call	0x860	; 0x860 <__fp_split3>
 8e6:	70 f3       	brcs	.-36     	; 0x8c4 <__mulsf3+0x8>

000008e8 <__mulsf3_pse>:
 8e8:	95 9f       	mul	r25, r21
 8ea:	c1 f3       	breq	.-16     	; 0x8dc <__mulsf3+0x20>
 8ec:	95 0f       	add	r25, r21
 8ee:	50 e0       	ldi	r21, 0x00	; 0
 8f0:	55 1f       	adc	r21, r21
 8f2:	62 9f       	mul	r22, r18
 8f4:	f0 01       	movw	r30, r0
 8f6:	72 9f       	mul	r23, r18
 8f8:	bb 27       	eor	r27, r27
 8fa:	f0 0d       	add	r31, r0
 8fc:	b1 1d       	adc	r27, r1
 8fe:	63 9f       	mul	r22, r19
 900:	aa 27       	eor	r26, r26
 902:	f0 0d       	add	r31, r0
 904:	b1 1d       	adc	r27, r1
 906:	aa 1f       	adc	r26, r26
 908:	64 9f       	mul	r22, r20
 90a:	66 27       	eor	r22, r22
 90c:	b0 0d       	add	r27, r0
 90e:	a1 1d       	adc	r26, r1
 910:	66 1f       	adc	r22, r22
 912:	82 9f       	mul	r24, r18
 914:	22 27       	eor	r18, r18
 916:	b0 0d       	add	r27, r0
 918:	a1 1d       	adc	r26, r1
 91a:	62 1f       	adc	r22, r18
 91c:	73 9f       	mul	r23, r19
 91e:	b0 0d       	add	r27, r0
 920:	a1 1d       	adc	r26, r1
 922:	62 1f       	adc	r22, r18
 924:	83 9f       	mul	r24, r19
 926:	a0 0d       	add	r26, r0
 928:	61 1d       	adc	r22, r1
 92a:	22 1f       	adc	r18, r18
 92c:	74 9f       	mul	r23, r20
 92e:	33 27       	eor	r19, r19
 930:	a0 0d       	add	r26, r0
 932:	61 1d       	adc	r22, r1
 934:	23 1f       	adc	r18, r19
 936:	84 9f       	mul	r24, r20
 938:	60 0d       	add	r22, r0
 93a:	21 1d       	adc	r18, r1
 93c:	82 2f       	mov	r24, r18
 93e:	76 2f       	mov	r23, r22
 940:	6a 2f       	mov	r22, r26
 942:	11 24       	eor	r1, r1
 944:	9f 57       	subi	r25, 0x7F	; 127
 946:	50 40       	sbci	r21, 0x00	; 0
 948:	9a f0       	brmi	.+38     	; 0x970 <__stack+0x71>
 94a:	f1 f0       	breq	.+60     	; 0x988 <__stack+0x89>
 94c:	88 23       	and	r24, r24
 94e:	4a f0       	brmi	.+18     	; 0x962 <__stack+0x63>
 950:	ee 0f       	add	r30, r30
 952:	ff 1f       	adc	r31, r31
 954:	bb 1f       	adc	r27, r27
 956:	66 1f       	adc	r22, r22
 958:	77 1f       	adc	r23, r23
 95a:	88 1f       	adc	r24, r24
 95c:	91 50       	subi	r25, 0x01	; 1
 95e:	50 40       	sbci	r21, 0x00	; 0
 960:	a9 f7       	brne	.-22     	; 0x94c <__stack+0x4d>
 962:	9e 3f       	cpi	r25, 0xFE	; 254
 964:	51 05       	cpc	r21, r1
 966:	80 f0       	brcs	.+32     	; 0x988 <__stack+0x89>
 968:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>
 96c:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__fp_szero>
 970:	5f 3f       	cpi	r21, 0xFF	; 255
 972:	e4 f3       	brlt	.-8      	; 0x96c <__stack+0x6d>
 974:	98 3e       	cpi	r25, 0xE8	; 232
 976:	d4 f3       	brlt	.-12     	; 0x96c <__stack+0x6d>
 978:	86 95       	lsr	r24
 97a:	77 95       	ror	r23
 97c:	67 95       	ror	r22
 97e:	b7 95       	ror	r27
 980:	f7 95       	ror	r31
 982:	e7 95       	ror	r30
 984:	9f 5f       	subi	r25, 0xFF	; 255
 986:	c1 f7       	brne	.-16     	; 0x978 <__stack+0x79>
 988:	fe 2b       	or	r31, r30
 98a:	88 0f       	add	r24, r24
 98c:	91 1d       	adc	r25, r1
 98e:	96 95       	lsr	r25
 990:	87 95       	ror	r24
 992:	97 f9       	bld	r25, 7
 994:	08 95       	ret

00000996 <__fp_inf>:
 996:	97 f9       	bld	r25, 7
 998:	9f 67       	ori	r25, 0x7F	; 127
 99a:	80 e8       	ldi	r24, 0x80	; 128
 99c:	70 e0       	ldi	r23, 0x00	; 0
 99e:	60 e0       	ldi	r22, 0x00	; 0
 9a0:	08 95       	ret

000009a2 <__fp_nan>:
 9a2:	9f ef       	ldi	r25, 0xFF	; 255
 9a4:	80 ec       	ldi	r24, 0xC0	; 192
 9a6:	08 95       	ret

000009a8 <__fp_pscA>:
 9a8:	00 24       	eor	r0, r0
 9aa:	0a 94       	dec	r0
 9ac:	16 16       	cp	r1, r22
 9ae:	17 06       	cpc	r1, r23
 9b0:	18 06       	cpc	r1, r24
 9b2:	09 06       	cpc	r0, r25
 9b4:	08 95       	ret

000009b6 <__fp_pscB>:
 9b6:	00 24       	eor	r0, r0
 9b8:	0a 94       	dec	r0
 9ba:	12 16       	cp	r1, r18
 9bc:	13 06       	cpc	r1, r19
 9be:	14 06       	cpc	r1, r20
 9c0:	05 06       	cpc	r0, r21
 9c2:	08 95       	ret

000009c4 <__fp_round>:
 9c4:	09 2e       	mov	r0, r25
 9c6:	03 94       	inc	r0
 9c8:	00 0c       	add	r0, r0
 9ca:	11 f4       	brne	.+4      	; 0x9d0 <__fp_round+0xc>
 9cc:	88 23       	and	r24, r24
 9ce:	52 f0       	brmi	.+20     	; 0x9e4 <__fp_round+0x20>
 9d0:	bb 0f       	add	r27, r27
 9d2:	40 f4       	brcc	.+16     	; 0x9e4 <__fp_round+0x20>
 9d4:	bf 2b       	or	r27, r31
 9d6:	11 f4       	brne	.+4      	; 0x9dc <__fp_round+0x18>
 9d8:	60 ff       	sbrs	r22, 0
 9da:	04 c0       	rjmp	.+8      	; 0x9e4 <__fp_round+0x20>
 9dc:	6f 5f       	subi	r22, 0xFF	; 255
 9de:	7f 4f       	sbci	r23, 0xFF	; 255
 9e0:	8f 4f       	sbci	r24, 0xFF	; 255
 9e2:	9f 4f       	sbci	r25, 0xFF	; 255
 9e4:	08 95       	ret

000009e6 <_exit>:
 9e6:	f8 94       	cli

000009e8 <__stop_program>:
 9e8:	ff cf       	rjmp	.-2      	; 0x9e8 <__stop_program>

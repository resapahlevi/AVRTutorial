
Lesson_2_Comm_USART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800200  0000039e  00000412  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000039e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  0000041e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000430  2**2
                  CONTENTS, READONLY
  4 .debug_info   00000bbc  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000b1a  00000000  00000000  0000102c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00001b46  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000003e6  00000000  00000000  00001b60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e9       	ldi	r30, 0x9E	; 158
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 30       	cpi	r26, 0x0C	; 12
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	0e 94 8d 00 	call	0x11a	; 0x11a <main>
 112:	0c 94 cd 01 	jmp	0x39a	; 0x39a <_exit>

00000116 <__bad_interrupt>:
 116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <main>:
 11a:	25 9a       	sbi	0x04, 5	; 4
 11c:	0e 94 a4 00 	call	0x148	; 0x148 <initUSART>
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	92 e0       	ldi	r25, 0x02	; 2
 124:	0e 94 c3 00 	call	0x186	; 0x186 <printString>
 128:	01 e0       	ldi	r16, 0x01	; 1
 12a:	10 e0       	ldi	r17, 0x00	; 0
 12c:	0e 94 bc 00 	call	0x178	; 0x178 <receiveByte>
 130:	c8 2f       	mov	r28, r24
 132:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 136:	25 b1       	in	r18, 0x05	; 5
 138:	c8 01       	movw	r24, r16
 13a:	01 c0       	rjmp	.+2      	; 0x13e <main+0x24>
 13c:	88 0f       	add	r24, r24
 13e:	ca 95       	dec	r28
 140:	ea f7       	brpl	.-6      	; 0x13c <main+0x22>
 142:	82 2b       	or	r24, r18
 144:	85 b9       	out	0x05, r24	; 5
 146:	f2 cf       	rjmp	.-28     	; 0x12c <main+0x12>

00000148 <initUSART>:
 148:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 14c:	87 e6       	ldi	r24, 0x67	; 103
 14e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 152:	e0 ec       	ldi	r30, 0xC0	; 192
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	8d 7f       	andi	r24, 0xFD	; 253
 15a:	80 83       	st	Z, r24
 15c:	88 e1       	ldi	r24, 0x18	; 24
 15e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 162:	86 e0       	ldi	r24, 0x06	; 6
 164:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 168:	08 95       	ret

0000016a <transmitByte>:
 16a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 16e:	95 ff       	sbrs	r25, 5
 170:	fc cf       	rjmp	.-8      	; 0x16a <transmitByte>
 172:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 176:	08 95       	ret

00000178 <receiveByte>:
 178:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 17c:	87 ff       	sbrs	r24, 7
 17e:	fc cf       	rjmp	.-8      	; 0x178 <receiveByte>
 180:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 184:	08 95       	ret

00000186 <printString>:
 186:	0f 93       	push	r16
 188:	1f 93       	push	r17
 18a:	cf 93       	push	r28
 18c:	8c 01       	movw	r16, r24
 18e:	c0 e0       	ldi	r28, 0x00	; 0
 190:	f8 01       	movw	r30, r16
 192:	ec 0f       	add	r30, r28
 194:	f1 1d       	adc	r31, r1
 196:	80 81       	ld	r24, Z
 198:	88 23       	and	r24, r24
 19a:	21 f0       	breq	.+8      	; 0x1a4 <printString+0x1e>
 19c:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 1a0:	cf 5f       	subi	r28, 0xFF	; 255
 1a2:	f6 cf       	rjmp	.-20     	; 0x190 <printString+0xa>
 1a4:	cf 91       	pop	r28
 1a6:	1f 91       	pop	r17
 1a8:	0f 91       	pop	r16
 1aa:	08 95       	ret

000001ac <readString>:
 1ac:	cf 92       	push	r12
 1ae:	df 92       	push	r13
 1b0:	ef 92       	push	r14
 1b2:	ff 92       	push	r15
 1b4:	0f 93       	push	r16
 1b6:	1f 93       	push	r17
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	6c 01       	movw	r12, r24
 1be:	f1 2c       	mov	r15, r1
 1c0:	06 2f       	mov	r16, r22
 1c2:	10 e0       	ldi	r17, 0x00	; 0
 1c4:	01 50       	subi	r16, 0x01	; 1
 1c6:	11 09       	sbc	r17, r1
 1c8:	cf 2d       	mov	r28, r15
 1ca:	d0 e0       	ldi	r29, 0x00	; 0
 1cc:	c0 17       	cp	r28, r16
 1ce:	d1 07       	cpc	r29, r17
 1d0:	44 f4       	brge	.+16     	; 0x1e2 <readString+0x36>
 1d2:	0e 94 bc 00 	call	0x178	; 0x178 <receiveByte>
 1d6:	e8 2e       	mov	r14, r24
 1d8:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 1dc:	8d e0       	ldi	r24, 0x0D	; 13
 1de:	e8 12       	cpse	r14, r24
 1e0:	0c c0       	rjmp	.+24     	; 0x1fa <readString+0x4e>
 1e2:	cc 0d       	add	r28, r12
 1e4:	dd 1d       	adc	r29, r13
 1e6:	18 82       	st	Y, r1
 1e8:	df 91       	pop	r29
 1ea:	cf 91       	pop	r28
 1ec:	1f 91       	pop	r17
 1ee:	0f 91       	pop	r16
 1f0:	ff 90       	pop	r15
 1f2:	ef 90       	pop	r14
 1f4:	df 90       	pop	r13
 1f6:	cf 90       	pop	r12
 1f8:	08 95       	ret
 1fa:	cc 0d       	add	r28, r12
 1fc:	dd 1d       	adc	r29, r13
 1fe:	e8 82       	st	Y, r14
 200:	f3 94       	inc	r15
 202:	e2 cf       	rjmp	.-60     	; 0x1c8 <readString+0x1c>

00000204 <printByte>:
 204:	cf 93       	push	r28
 206:	c8 2f       	mov	r28, r24
 208:	64 e6       	ldi	r22, 0x64	; 100
 20a:	0e 94 ad 01 	call	0x35a	; 0x35a <__udivmodqi4>
 20e:	80 5d       	subi	r24, 0xD0	; 208
 210:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 214:	2a e0       	ldi	r18, 0x0A	; 10
 216:	8c 2f       	mov	r24, r28
 218:	62 2f       	mov	r22, r18
 21a:	0e 94 ad 01 	call	0x35a	; 0x35a <__udivmodqi4>
 21e:	c9 2f       	mov	r28, r25
 220:	0e 94 ad 01 	call	0x35a	; 0x35a <__udivmodqi4>
 224:	80 e3       	ldi	r24, 0x30	; 48
 226:	89 0f       	add	r24, r25
 228:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 22c:	80 e3       	ldi	r24, 0x30	; 48
 22e:	8c 0f       	add	r24, r28
 230:	cf 91       	pop	r28
 232:	0c 94 b5 00 	jmp	0x16a	; 0x16a <transmitByte>

00000236 <printWord>:
 236:	0f 93       	push	r16
 238:	1f 93       	push	r17
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	8c 01       	movw	r16, r24
 240:	60 e1       	ldi	r22, 0x10	; 16
 242:	77 e2       	ldi	r23, 0x27	; 39
 244:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodhi4>
 248:	80 e3       	ldi	r24, 0x30	; 48
 24a:	86 0f       	add	r24, r22
 24c:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 250:	c8 01       	movw	r24, r16
 252:	68 ee       	ldi	r22, 0xE8	; 232
 254:	73 e0       	ldi	r23, 0x03	; 3
 256:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodhi4>
 25a:	cb 01       	movw	r24, r22
 25c:	ca e0       	ldi	r28, 0x0A	; 10
 25e:	d0 e0       	ldi	r29, 0x00	; 0
 260:	be 01       	movw	r22, r28
 262:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodhi4>
 266:	80 5d       	subi	r24, 0xD0	; 208
 268:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 26c:	c8 01       	movw	r24, r16
 26e:	64 e6       	ldi	r22, 0x64	; 100
 270:	70 e0       	ldi	r23, 0x00	; 0
 272:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodhi4>
 276:	cb 01       	movw	r24, r22
 278:	be 01       	movw	r22, r28
 27a:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodhi4>
 27e:	80 5d       	subi	r24, 0xD0	; 208
 280:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 284:	c8 01       	movw	r24, r16
 286:	be 01       	movw	r22, r28
 288:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodhi4>
 28c:	18 2f       	mov	r17, r24
 28e:	cb 01       	movw	r24, r22
 290:	be 01       	movw	r22, r28
 292:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodhi4>
 296:	80 5d       	subi	r24, 0xD0	; 208
 298:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 29c:	80 e3       	ldi	r24, 0x30	; 48
 29e:	81 0f       	add	r24, r17
 2a0:	df 91       	pop	r29
 2a2:	cf 91       	pop	r28
 2a4:	1f 91       	pop	r17
 2a6:	0f 91       	pop	r16
 2a8:	0c 94 b5 00 	jmp	0x16a	; 0x16a <transmitByte>

000002ac <printBinaryByte>:
 2ac:	1f 93       	push	r17
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	1f 92       	push	r1
 2b4:	cd b7       	in	r28, 0x3d	; 61
 2b6:	de b7       	in	r29, 0x3e	; 62
 2b8:	89 83       	std	Y+1, r24	; 0x01
 2ba:	17 e0       	ldi	r17, 0x07	; 7
 2bc:	89 81       	ldd	r24, Y+1	; 0x01
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	01 2e       	mov	r0, r17
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <printBinaryByte+0x1c>
 2c4:	95 95       	asr	r25
 2c6:	87 95       	ror	r24
 2c8:	0a 94       	dec	r0
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <printBinaryByte+0x18>
 2cc:	80 ff       	sbrs	r24, 0
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <printBinaryByte+0x28>
 2d0:	81 e3       	ldi	r24, 0x31	; 49
 2d2:	01 c0       	rjmp	.+2      	; 0x2d6 <printBinaryByte+0x2a>
 2d4:	80 e3       	ldi	r24, 0x30	; 48
 2d6:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 2da:	11 50       	subi	r17, 0x01	; 1
 2dc:	78 f7       	brcc	.-34     	; 0x2bc <printBinaryByte+0x10>
 2de:	0f 90       	pop	r0
 2e0:	df 91       	pop	r29
 2e2:	cf 91       	pop	r28
 2e4:	1f 91       	pop	r17
 2e6:	08 95       	ret

000002e8 <nibbleToHexCharacter>:
 2e8:	8a 30       	cpi	r24, 0x0A	; 10
 2ea:	10 f4       	brcc	.+4      	; 0x2f0 <nibbleToHexCharacter+0x8>
 2ec:	80 5d       	subi	r24, 0xD0	; 208
 2ee:	08 95       	ret
 2f0:	89 5c       	subi	r24, 0xC9	; 201
 2f2:	08 95       	ret

000002f4 <printHexByte>:
 2f4:	cf 93       	push	r28
 2f6:	c8 2f       	mov	r28, r24
 2f8:	82 95       	swap	r24
 2fa:	8f 70       	andi	r24, 0x0F	; 15
 2fc:	0e 94 74 01 	call	0x2e8	; 0x2e8 <nibbleToHexCharacter>
 300:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 304:	8c 2f       	mov	r24, r28
 306:	8f 70       	andi	r24, 0x0F	; 15
 308:	0e 94 74 01 	call	0x2e8	; 0x2e8 <nibbleToHexCharacter>
 30c:	cf 91       	pop	r28
 30e:	0c 94 b5 00 	jmp	0x16a	; 0x16a <transmitByte>

00000312 <getNumber>:
 312:	0f 93       	push	r16
 314:	1f 93       	push	r17
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	d0 e3       	ldi	r29, 0x30	; 48
 31c:	c0 e3       	ldi	r28, 0x30	; 48
 31e:	10 e3       	ldi	r17, 0x30	; 48
 320:	0e 94 bc 00 	call	0x178	; 0x178 <receiveByte>
 324:	08 2f       	mov	r16, r24
 326:	0e 94 b5 00 	call	0x16a	; 0x16a <transmitByte>
 32a:	0d 30       	cpi	r16, 0x0D	; 13
 32c:	21 f0       	breq	.+8      	; 0x336 <getNumber+0x24>
 32e:	1c 2f       	mov	r17, r28
 330:	cd 2f       	mov	r28, r29
 332:	d0 2f       	mov	r29, r16
 334:	f5 cf       	rjmp	.-22     	; 0x320 <getNumber+0xe>
 336:	10 53       	subi	r17, 0x30	; 48
 338:	d0 53       	subi	r29, 0x30	; 48
 33a:	84 e6       	ldi	r24, 0x64	; 100
 33c:	18 9f       	mul	r17, r24
 33e:	d0 0d       	add	r29, r0
 340:	11 24       	eor	r1, r1
 342:	cc 0f       	add	r28, r28
 344:	c0 56       	subi	r28, 0x60	; 96
 346:	8c 2f       	mov	r24, r28
 348:	88 0f       	add	r24, r24
 34a:	88 0f       	add	r24, r24
 34c:	8c 0f       	add	r24, r28
 34e:	8d 0f       	add	r24, r29
 350:	df 91       	pop	r29
 352:	cf 91       	pop	r28
 354:	1f 91       	pop	r17
 356:	0f 91       	pop	r16
 358:	08 95       	ret

0000035a <__udivmodqi4>:
 35a:	99 1b       	sub	r25, r25
 35c:	79 e0       	ldi	r23, 0x09	; 9
 35e:	04 c0       	rjmp	.+8      	; 0x368 <__udivmodqi4_ep>

00000360 <__udivmodqi4_loop>:
 360:	99 1f       	adc	r25, r25
 362:	96 17       	cp	r25, r22
 364:	08 f0       	brcs	.+2      	; 0x368 <__udivmodqi4_ep>
 366:	96 1b       	sub	r25, r22

00000368 <__udivmodqi4_ep>:
 368:	88 1f       	adc	r24, r24
 36a:	7a 95       	dec	r23
 36c:	c9 f7       	brne	.-14     	; 0x360 <__udivmodqi4_loop>
 36e:	80 95       	com	r24
 370:	08 95       	ret

00000372 <__udivmodhi4>:
 372:	aa 1b       	sub	r26, r26
 374:	bb 1b       	sub	r27, r27
 376:	51 e1       	ldi	r21, 0x11	; 17
 378:	07 c0       	rjmp	.+14     	; 0x388 <__udivmodhi4_ep>

0000037a <__udivmodhi4_loop>:
 37a:	aa 1f       	adc	r26, r26
 37c:	bb 1f       	adc	r27, r27
 37e:	a6 17       	cp	r26, r22
 380:	b7 07       	cpc	r27, r23
 382:	10 f0       	brcs	.+4      	; 0x388 <__udivmodhi4_ep>
 384:	a6 1b       	sub	r26, r22
 386:	b7 0b       	sbc	r27, r23

00000388 <__udivmodhi4_ep>:
 388:	88 1f       	adc	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	5a 95       	dec	r21
 38e:	a9 f7       	brne	.-22     	; 0x37a <__udivmodhi4_loop>
 390:	80 95       	com	r24
 392:	90 95       	com	r25
 394:	bc 01       	movw	r22, r24
 396:	cd 01       	movw	r24, r26
 398:	08 95       	ret

0000039a <_exit>:
 39a:	f8 94       	cli

0000039c <__stop_program>:
 39c:	ff cf       	rjmp	.-2      	; 0x39c <__stop_program>
